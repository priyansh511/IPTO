// <auto-generated />
using System;
using IPTreatment.Repository.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPTreatment.Repository.Migrations
{
    [DbContext(typeof(IPTreatmentContext))]
    [Migration("20211119144610_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IPTreatment.Repository.Models.IPTreatmentPackage", b =>
                {
                    b.Property<string>("IPTreatmentPackagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ailment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.HasKey("IPTreatmentPackagesId");

                    b.HasIndex("PackageId");

                    b.ToTable("IPTreatmentPackage");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.PackageDetail", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("TestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentDuration")
                        .HasColumnType("int");

                    b.Property<string>("TreatmentPackageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageId");

                    b.ToTable("PackageDetail");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.PatientDetail", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Ailment")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TreatmentCommencementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TreatmentPackageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("PatientDetail");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.SpecialistDetail", b =>
                {
                    b.Property<int>("SpecialistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfExpertise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExperienceInYears")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentDuration")
                        .HasColumnType("int");

                    b.HasKey("SpecialistId");

                    b.ToTable("SpecialistDetails");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.TreatmentPlan", b =>
                {
                    b.Property<int>("TreatmentPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("PackageDetailName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialistId")
                        .HasColumnType("int");

                    b.Property<string>("TestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TreatmentCommencementDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TreatmentEndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TreatmentPlanId");

                    b.HasIndex("PatientId");

                    b.HasIndex("SpecialistId");

                    b.ToTable("TreatmentPlan");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.IPTreatmentPackage", b =>
                {
                    b.HasOne("IPTreatment.Repository.Models.PackageDetail", "PackageDetail")
                        .WithMany("IPTreatmentPackages")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageDetail");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.TreatmentPlan", b =>
                {
                    b.HasOne("IPTreatment.Repository.Models.PatientDetail", "PatientDetail")
                        .WithMany("TreatmentPlans")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPTreatment.Repository.Models.SpecialistDetail", "SpecialistDetail")
                        .WithMany("TreatmentPlans")
                        .HasForeignKey("SpecialistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientDetail");

                    b.Navigation("SpecialistDetail");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.PackageDetail", b =>
                {
                    b.Navigation("IPTreatmentPackages");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.PatientDetail", b =>
                {
                    b.Navigation("TreatmentPlans");
                });

            modelBuilder.Entity("IPTreatment.Repository.Models.SpecialistDetail", b =>
                {
                    b.Navigation("TreatmentPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
